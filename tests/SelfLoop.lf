target C {
    timeout: 1 sec,
    fast: true
};
reactor Self {
    input x:int;
    output y:int;
    logical action a:int;
    state expected:int(43);
    reaction(a) -> y {=
        printf("a = %d\n", a->value);
        SET(y, a->value + 1);
    =}
    reaction(x) -> a {=
        printf("x = %d\n", x->value);
        if (x->value != self->expected) {
            fprintf(stderr, "Expected %d.\n", self->expected);
            exit(1);
        }
        self->expected++;
        schedule_int(a, MSEC(100), x->value);
    =}
    reaction(startup) -> a {=
        schedule_int(a, 0, 42);
    =}
    reaction(shutdown) {=
        if (self->expected <= 43) {
            fprintf(stderr, "Received no data.\n");
            exit(2);
        }
    =}
}
main reactor SelfLoop {
    u = new Self();
    u.y -> u.x;
}
