// Test logical action with delay.
target C;

reactor GeneratedDelay {
    input y_in:int;
    output y_out:int;
    state y_state:int(0);
    logical action act(100 msec);
    reaction(y_in) -> act {=
        self->y_state = y_in->value;
        schedule(act, MSEC(0));
    =}

    reaction(act) -> y_out {=
        SET(y_out, self->y_state);
    =}
}

reactor Source {
    output out:int;
    reaction(startup) -> out {=
        SET(out, 1);
    =} 
}
reactor Sink {
	input in:int;
	reaction(in) {=
        interval_t elapsed_logical = get_elapsed_logical_time();
        interval_t logical = get_logical_time();
        interval_t physical = get_physical_time();
        // printf("Logical, physical, and elapsed logical: %lld %lld %lld.\n", logical, physical, elapsed_logical);
        if (elapsed_logical != MSEC(100)) {
        	// printf("FAILURE: Expected %lld but got %lld.\n", MSEC(100), elapsed_logical);
            exit(1);
        } else {
            // printf("SUCCESS. Elapsed logical time is 100 msec.\n");
        }
	=}
}
main reactor ActionDelay {
    source = new Source();
    sink = new Sink();
    g = new GeneratedDelay();
    
    source.out -> g.y_in;
    g.y_out -> sink.in;
}
